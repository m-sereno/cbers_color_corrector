# -*- coding: utf-8 -*-
"""
/***************************************************************************
 CBERSColorCorrectorDialog
                                 A QGIS plugin
 This plugin corrects the color from CBERS images to match the database
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2023-05-27
        git sha              : $Format:%H$
        copyright            : (C) 2023 by Mateus Sereno
        email                : mateus.sereno@ime.eb.br
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from qgis.PyQt import uic
from qgis.PyQt import QtWidgets
from qgis.core import QgsProject, QgsMapLayerType, QgsMessageLog
from qgis.PyQt.QtCore import QCoreApplication, Qt
from qgis.PyQt.QtWidgets import QDialog, QComboBox

# This loads your .ui file so that PyQt can populate your plugin with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'cbers_color_corrector_dialog_base.ui'))


class CBERSColorCorrectorDialog(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(CBERSColorCorrectorDialog, self).__init__(parent)
        self.setupUi(self)

        self.populate_combobox()
        self.button_box.accepted.connect(self.on_ok_clicked)

    def populate_combobox(self):
        """Populate the combo box with available raster layers."""
        layers = QgsProject.instance().mapLayers().values()
        for layer in layers:
            if layer.type() == QgsMapLayerType.RasterLayer:
                self.selectLayerComboBox.addItem(layer.name())
    
    def on_ok_clicked(self):
        """Handle the OK button click."""
        selected_layer = self.selectLayerComboBox.currentText()
        # This will log the name of the selected layer when the OK button is clicked.
        QgsMessageLog.logMessage(f'Selected layer: {selected_layer}')